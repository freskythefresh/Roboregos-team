// Import the necessary libraries for controlling the sensors and motors:
#include <encoder.h>
#include <Ultrasonic.h>
#include <Adafruit_TCS34725.h>
#include <Wire.h>
#include <MPU6050.h>

#define LINE_SENSOR_PIN A0  // Line sensor with 8 mini infrared sensors
#define COLOR_SENSOR_1_SDA A4  // Color sensor 1 (Adafruit TCS34725) SDA
#define COLOR_SENSOR_1_SCL A5  // Color sensor 1 SCL
#define COLOR_SENSOR_2_SDA A6  // Color sensor 2 SDA
#define COLOR_SENSOR_2_SCL A7  // Color sensor 2 SCL
#define GYROSCOPE_SDA A8  // MPU6050 Gyroscope SDA
#define GYROSCOPE_SCL A9  // MPU6050 Gyroscope SCL

// Integrated Motor Encoder Pins
#define MOTOR_ENCODER_1_PIN_A 3
#define MOTOR_ENCODER_1_PIN_B 4
#define MOTOR_ENCODER_2_PIN_A 5
#define MOTOR_ENCODER_2_PIN_B 6
#define MOTOR_ENCODER_3_PIN_A 7
#define MOTOR_ENCODER_3_PIN_B 8
#define MOTOR_ENCODER_4_PIN_A 9
#define MOTOR_ENCODER_4_PIN_B 10

// Rotary Motor Encoder Pins
#define ROTARY_ENCODER_1_PIN_A 11
#define ROTARY_ENCODER_1_PIN_B 12
#define ROTARY_ENCODER_2_PIN_A A1
#define ROTARY_ENCODER_2_PIN_B A2
#define ROTARY_ENCODER_3_PIN_A A3
#define ROTARY_ENCODER_3_PIN_B A4
#define ROTARY_ENCODER_4_PIN_A A5
#define ROTARY_ENCODER_4_PIN_B A6

// 360 Vision Ultrasonics
#define ULTRASONIC_1_TRIG_PIN 2
#define ULTRASONIC_1_ECHO_PIN 3
#define ULTRASONIC_2_TRIG_PIN 4
#define ULTRASONIC_2_ECHO_PIN 5
#define ULTRASONIC_3_TRIG_PIN 6
#define ULTRASONIC_3_ECHO_PIN 7
#define ULTRASONIC_4_TRIG_PIN 8
#define ULTRASONIC_4_ECHO_PIN 9
#define ULTRASONIC_5_TRIG_PIN 10
#define ULTRASONIC_5_ECHO_PIN 11
#define ULTRASONIC_6_TRIG_PIN 12
#define ULTRASONIC_6_ECHO_PIN A0
#define ULTRASONIC_7_TRIG_PIN A1
#define ULTRASONIC_7_ECHO_PIN A2
#define ULTRASONIC_8_TRIG_PIN A3
#define ULTRASONIC_8_ECHO_PIN A4

// H bridge pins
#define H_BRIDGE_MOTOR_1_A 14
#define H_BRIDGE_MOTOR_1_B 15
#define H_BRIDGE_MOTOR_2_A 16
#define H_BRIDGE_MOTOR_2_B 17
#define H_BRIDGE_MOTOR_3_A 18
#define H_BRIDGE_MOTOR_3_B 19
#define H_BRIDGE_MOTOR_4_A 20
#define H_BRIDGE_MOTOR_4_B 21

// Ball detector ultrasonic
#define ULTRASONIC_UNDER_TRIG_PIN A7
#define ULTRASONIC_UNDER_ECHO_PIN A8

// Initializations
// Encoders
Encoder motorEncoder1(MOTOR_ENCODER_1_PIN_A, MOTOR_ENCODER_1_PIN_B);
Encoder motorEncoder2(MOTOR_ENCODER_2_PIN_A, MOTOR_ENCODER_2_PIN_B);
Encoder motorEncoder3(MOTOR_ENCODER_3_PIN_A, MOTOR_ENCODER_3_PIN_B);
Encoder motorEncoder4(MOTOR_ENCODER_4_PIN_A, MOTOR_ENCODER_4_PIN_B);

// Ultrasonics
Ultrasonic ultrasonicSensors[8] = {
    Ultrasonic(ULTRASONIC_1_TRIG_PIN, ULTRASONIC_1_ECHO_PIN),
    Ultrasonic(ULTRASONIC_2_TRIG_PIN, ULTRASONIC_2_ECHO_PIN),
    Ultrasonic(ULTRASONIC_3_TRIG_PIN, ULTRASONIC_3_ECHO_PIN),
    Ultrasonic(ULTRASONIC_4_TRIG_PIN, ULTRASONIC_4_ECHO_PIN),
    Ultrasonic(ULTRASONIC_5_TRIG_PIN, ULTRASONIC_5_ECHO_PIN),
    Ultrasonic(ULTRASONIC_6_TRIG_PIN, ULTRASONIC_6_ECHO_PIN),
    Ultrasonic(ULTRASONIC_7_TRIG_PIN, ULTRASONIC_7_ECHO_PIN),
    Ultrasonic(ULTRASONIC_8_TRIG_PIN, ULTRASONIC_8_ECHO_PIN),
    Ultrasonic(ULTRASONIC_UNDER_TRIG_PIN, ULTRASONIC_UNDER_ECHO_PIN),
  
};

Adafruit_TCS34725 colorSensor1;
Adafruit_TCS34725 colorSensor2;

//gyroscope
MPU6050 mpu;

//calibration

void SetupMotores();
void SetupColorSensors();
void SetupUltrasonics();
void SetupLinesensor();
void SetupGyroscope();
void SetupWheelposition();
void SetupMap();


//Main Functions
void Motores();
void ColorSensors();
void MainUltrasonics();
void ballultrasonic();
void Linesensor();
void Gyroscope();
void WheelPosition();
void MapUpdate();


void setup() {
    Serial.begin(9600);

    // Initialize I2C communication for color sensors and gyroscope
    Wire.begin();

    // Initialize color sensors
    colorSensor1.begin(COLOR_SENSOR_1_SDA, COLOR_SENSOR_1_SCL);
    colorSensor2.begin(COLOR_SENSOR_2_SDA, COLOR_SENSOR_2_SCL);

    // Initialize gyroscope
    mpu.initialize(GYROSCOPE_SDA, GYROSCOPE_SCL);


// - Motores: controlar los motores con encoders de Arduino para asegurar precisión.
// - Sensores ultrasónicos: medir la distancia para evitar colisiones en la pista C y rampa.
// - Sensor de color: para detección de colores específicos en Pistas A y C.
// - Sensores infrarrojos: seguir la línea negra en Pista B.
// - Giroscopio de 3 ejes: para estabilización en el sube y baja.
// - Encoders rotativos: redundancia en el control de movimiento.

// Definir variables globales y parámetros clave:
// - Tamaño de la pista: las unidades son de **30 x 30 cm**.
// - Pista A: 3 x 3 unidades (90 x 90 cm).
// - Pista B: 5 x 4 unidades (150 x 120 cm).
// - Pista C: 5 x 3 unidades (150 x 90 cm).
// - Sube y baja: 3 unidades de largo (90 cm), inclinación máxima de 22° ± 2°.
// - Tamaño de la pelota azul en Pista A: **diámetro de 7.5 cm**.

// Colores a detectar:
// - **Pista A:** Pelota azul.
// - **Pista B:** Línea negra sobre fondo blanco.
// - **Pista C:** Amarillo, morado, rosa (correctos), negro (dead end a evitar).
// - Checkpoints: verde (inicio), rojo (final).
